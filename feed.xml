<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://yesyourshin.github.io/</id><title>Shin</title><subtitle>A minimal, responsive, and powerful Jekyll theme for presenting professional writing.</subtitle> <updated>2022-11-10T21:27:09+09:00</updated> <author> <name>YesYourShin</name> <uri>https://yesyourshin.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://yesyourshin.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="https://yesyourshin.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator> <rights> © 2022 YesYourShin </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>[Vue.js] Vue2 설치하기</title><link href="https://yesyourshin.github.io/posts/vue2-%EC%84%A4%EC%B9%98/" rel="alternate" type="text/html" title="[Vue.js] Vue2 설치하기" /><published>2022-11-10T21:12:00+09:00</published> <updated>2022-11-10T21:26:45+09:00</updated> <id>https://yesyourshin.github.io/posts/vue2-%EC%84%A4%EC%B9%98/</id> <content src="https://yesyourshin.github.io/posts/vue2-%EC%84%A4%EC%B9%98/" /> <author> <name>YesYourShin</name> </author> <category term="Vue.js" /> <summary> Vue.js2 공식 홈페이지 https://kr.vuejs.org/ 설치 방법 Vue CLI 설치 npm install -g @vue/cli Vue 프로젝트 생성 원하는 프로젝트 명으로 vue 생성 명령어를 입력한다. vue create project-name 기본 Vue로 생성하려면 여기서 Default Vue2를 선택하여 생성하면 된다. 지금은 기능을 추가로 선택해 설치할 수 있는 Manually select features를 선택하겠다. 기본 선택된 것들 외에 추가하고 싶은 기능을 선택하여 설치하면 된다. 이동: 방향키 ↑ ↓ 기능 선택: space 전체 선택: a 전체 반전: i 설정 완료: enter 생성할 Vue Project의 버전을 선택한다. E... </summary> </entry> <entry><title>[Github] 삭제된 Repository 복구</title><link href="https://yesyourshin.github.io/posts/github-restoring-deleted-repository/" rel="alternate" type="text/html" title="[Github] 삭제된 Repository 복구" /><published>2022-09-20T17:02:00+09:00</published> <updated>2022-11-10T21:26:45+09:00</updated> <id>https://yesyourshin.github.io/posts/github-restoring-deleted-repository/</id> <content src="https://yesyourshin.github.io/posts/github-restoring-deleted-repository/" /> <author> <name>YesYourShin</name> </author> <category term="Github" /> <summary> 페이지 오른쪽 상단 프로필을 클릭한 후 Settings를 클릭해 들어간다. 그 후 왼쪽 메뉴에서 Repositories로 이동한다. Repositories에서 Deleted repositories를 클릭한다. 그러면 삭제했던 Repository를 확인할 수 있다. 복구할 Repository를 찾아서 Restore를 눌러주면 복구가 완료된다. 삭제하고 바로 여기서 확인할 수 있는 것이 아니라 약 1시간 정도 지나야 확인할 수 있다. 참고로 Fork한 Repository는 복구할 수 없다. 만약 Fork한 Repository를 복구하고 싶을 경우 아래의 Github Support에 도움을 요청해보기를 바란다. https://support.github.com/contact?ta... </summary> </entry> <entry><title>[VSCode] markdown 작성 시 줄 끝의 공백이 제거되는 현상 해결 방법</title><link href="https://yesyourshin.github.io/posts/prettier-md/" rel="alternate" type="text/html" title="[VSCode] markdown 작성 시 줄 끝의 공백이 제거되는 현상 해결 방법" /><published>2022-09-19T20:36:00+09:00</published> <updated>2022-11-10T21:26:45+09:00</updated> <id>https://yesyourshin.github.io/posts/prettier-md/</id> <content src="https://yesyourshin.github.io/posts/prettier-md/" /> <author> <name>YesYourShin</name> </author> <category term="Visual Studio Code" /> <summary> VSCode로 블로그 글을 작성하려고 하였는데 저장을 하게 되면 줄 끝에 있는 공백이 제거되는 현상이 있어서, 줄 끝에 있는 공백 2칸이 없어져서 개행을 할 때 곤란했다. 그래서 해결방법을 찾아보았다. Prettier 사용 중일 시 Markdown파일에 적용되지 않도록 하기 Prettier는 정해진 규칙에 따라 자동으로 코드를 정리해주는 VSCode 확장 프로그램이다. 이 프로그램을 사용하고 있다면 Markdown 파일이 있는 폴더 또는 루트 폴더에 .prettierignore 파일을 만든다. 그 후 아래처럼 작성한다. *.md 이렇게 하면 해당폴더와 하위 폴더의 Markdown 파일은 전부 Prettier 기능이 적용되지 않게 된다. .editorconfig 파일 수정하기 editor... </summary> </entry> <entry><title>[Git] subtree로 Commit과 같이 Repository 합치기</title><link href="https://yesyourshin.github.io/posts/git-subtree/" rel="alternate" type="text/html" title="[Git] subtree로 Commit과 같이 Repository 합치기" /><published>2022-09-19T19:57:00+09:00</published> <updated>2022-09-19T19:57:00+09:00</updated> <id>https://yesyourshin.github.io/posts/git-subtree/</id> <content src="https://yesyourshin.github.io/posts/git-subtree/" /> <author> <name>YesYourShin</name> </author> <category term="Git" /> <summary> 프로그래밍을 하면서 배웠던 걸 전부 Repository를 만들어 push 하다보니 Repository가 너무 많아졌다. 그래서 한 곳으로 모으는 정리를 하고 싶었다. 그런데 Repository의 파일들을 그냥 clone해서 새 Repository에 넣을 경우 이전에 했던 commit들이 다 사라져서 열심히 심어놓은 잔디도 없어진다. 그래서 commit 내역도 같이 합칠 수 있는 것을 찾아보니 git subtree를 사용하면 가능하다고 하여 사용해 보기로 하였다. 새로운 Repository 만들기 Repository를 한 곳에 모아야 하니 Github에서 새로운 Repository를 만들어 준다. 그리고 clone을 해준다. $ git clone (복사할 Repository) 그 후 co... </summary> </entry> <entry><title>[github 블로그 만들기] 4 - Google Analytics를 사용하여 Page View 구현하기</title><link href="https://yesyourshin.github.io/posts/making-github-blog-4/" rel="alternate" type="text/html" title="[github 블로그 만들기] 4 - Google Analytics를 사용하여 Page View 구현하기" /><published>2022-09-16T15:17:00+09:00</published> <updated>2022-09-16T15:17:00+09:00</updated> <id>https://yesyourshin.github.io/posts/making-github-blog-4/</id> <content src="https://yesyourshin.github.io/posts/making-github-blog-4/" /> <author> <name>YesYourShin</name> </author> <category term="Github Blog" /> <summary> Google Analytics 설정 Google Analytics 계정 및 속성 만들기 아래의 Google Analytics 홈페이지로 이동하여 측정 시작을 클릭한다. Google Analytics : https://analytics.google.com/ 계정 설정, 속성 설정, 비즈니스 정보를 입력하고 만들기 버튼을 누른다. 속성을 설정할 때 고급 옵션에서 유니버설 애널리틱스 속성 만들기를 체크하여 자신의 블로그 링크를 넣고 Google 애널리틱스 4 속성과 유니버설 애널리틱스 속성 둘 다 만들기와 Google 애널리틱스 4 속성에 대해 향상된 측정 사용 설정을 체크한다. 왼쪽 위의 모든 계정 &amp;gt; @@@ 이라고 적힌 탭을 눌러보면 아래의 창이 나타난다. 만약 속... </summary> </entry> </feed>
